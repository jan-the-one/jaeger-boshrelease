version: '2'

services:
    # hotrod:
    #   image: jaegertracing/example-hotrod:1.41.0
    #   ports:
    #     - '8080:8080'
    #     - '8083:8083'
    #   environment:
    #     - JAEGER_AGENT_HOST=jaeger-agent
    #     - JAEGER_AGENT_PORT=6831
    #     - JAEGER_SAMPLER_TYPE=remote
    #     - JAEGER_SAMPLING_ENDPOINT=http://jaeger-agent:5778/sampling
    #   # depends_on:
    #   #   - jaeger-agent
    #   restart: on-failure

    # jaeger-query:
    #   image: jaegertracing/jaeger-query
    #   command:
    #     - "--grpc-storage.server=jaeger-remote-storage:17271"
    #     - "--log-level=debug"
    #   ports:
    #     - "16686:16686"
    #     - "16687"
    #   environment:
    #     - SPAN_STORAGE_TYPE=grpc
    #   restart: on-failure
    #   depends_on:
    #     - jaeger-remote-storage

    # jaeger-remote-storage:
    #   image: jaegertracing/jaeger-remote-storage
    #   command:
    #     - "--log-level=debug"
    #   environment:
    #     - SPAN_STORAGE_TYPE=memory
    #   ports:
    #     - "17271:17271"

    # jaeger-collector:
    #   image: jaegertracing/jaeger-collector
    #   environment: 
    #     - LOG_LEVEL=debug
    #     - SPAN_STORAGE_TYPE=grpc
    #     # - SPAN_STORAGE_TYPE=kafka
    #     # - KAFKA_BROKERS=kafka:9092
    #     # - KAFKA_PRODUCER_BROKERS=kafka:29092
    #     # - KAFKA_PRODUCER_TOPIC=spans
    #   ports:
    #     - "14269:14269"
    #     - "14268:14268"
    #     - "14250:14250"
    #     - "9411:9411"
    #     - "4318:4318"
    #   command: #needed only for the remote-storage
    #     - "--grpc-storage.server=jaeger-remote-storage:17271"
    #     - "--collector.zipkin.host-port=:9411"
    #     - "--log-level=debug"
    #   restart: on-failure
      

    # # jaeger-agent:
    # #   image: jaegertracing/jaeger-agent
    # #   command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
    # #   ports:
    # #     - "5775:5775/udp"
    # #     - "6831:6831/udp"
    # #     - "6832:6832/udp"
    # #     - "5778:5778"
    # #   environment:
    # #     - LOG_LEVEL=debug
    # #     - SPAN_STORAGE_TYPE=kafka
    # #   restart: on-failure
    # #   depends_on:
    # #     - jaeger-collector

    zookeeper:
      image: confluentinc/cp-zookeeper
      container_name: zookeeper
      environment:
          ZOOKEEPER_CLIENT_PORT: 2181
      ports:
          - 2181:2181

    kafka:
      image: confluentinc/cp-kafka
      container_name: kafka
      environment:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          ALLOW_PLAINTEXT_LISTENER: "yes"
          KAFKA_LISTENERS-INTERNAL: //kafka:29092,EXTERNAL://localhost:9092
          KAFKA_ADVERTISED: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      ports:
          - 9092:9092
          - 29092:29092
      depends_on:
          - zookeeper
      restart: on-failure
